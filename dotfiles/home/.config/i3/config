#  _  _____    __              __ _       
# (_)|____ |  / /             / _(_)      
#  _     / / / /__ ___  _ __ | |_ _  __ _ 
# | |    \ \/ / __/ _ \| '_ \|  _| |/ _` |
# | |.___/ / / (_| (_) | | | | | | | (_| |
# |_|\____/_/ \___\___/|_| |_|_| |_|\__, |
#                                    __/ |
#                                   |___/ 

# Set modifier = Windows, $sup = Alt
set $mod Mod4
set $sup Mod1

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below. ISO 10646 = Unicode
#font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
font pango:DejaVu Sans Mono 10

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# kill focused window
bindsym $mod+Shift+q kill

# start dmenu (a program launcher)
#bindsym $mod+d exec dmenu_run
bindsym $mod+d exec bash ~/.bin/dmenu-custom

# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop

# change focus
#bindsym $mod+j focus left
#bindsym $mod+k focus down
#bindsym $mod+l focus up
#bindsym $mod+semicolon focus right

bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+j move left
bindsym $mod+Shift+k move down
bindsym $mod+Shift+l move up
bindsym $mod+Shift+semicolon move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+bar split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# switch to workspace
set $ws1 "1: "
set $ws2 "2: "
set $ws3 "3: "
set $ws4 "4: "
set $ws5 "5: "
set $ws6 "6: "
set $ws7 "7: "
set $ws8 "8: "
set $ws9 "9: "
set $ws0 "10: "

bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+8 workspace $ws8
bindsym $mod+9 workspace $ws9
bindsym $mod+0 workspace $ws0

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5
bindsym $mod+Shift+6 move container to workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7
bindsym $mod+Shift+8 move container to workspace $ws8
bindsym $mod+Shift+9 move container to workspace $ws9
bindsym $mod+Shift+0 move container to workspace $ws0

bindsym $mod+Tab workspace next

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
# These bindings trigger as soon as you enter the resize mode

# Pressing left will shrink the window’s width.
# Pressing right will grow the window’s width.
# Pressing up will shrink the window’s height.
# Pressing down will grow the window’s height.
bindsym j resize shrink width 10 px or 10 ppt
bindsym k resize grow height 10 px or 10 ppt
bindsym l resize shrink height 10 px or 10 ppt
bindsym semicolon resize grow width 10 px or 10 ppt

# same bindings, but for the arrow keys
bindsym Left resize shrink width 10 px or 10 ppt
bindsym Down resize grow height 10 px or 10 ppt
bindsym Up resize shrink height 10 px or 10 ppt
bindsym Right resize grow width 10 px or 10 ppt

# back to normal: Enter or Escape
bindsym Return mode "default"
bindsym Escape mode "default"
}

bindsym $mod+r mode "resize"

# Start i3bar to display a workspace bar
# Start i3status
bar {
  #mode hide
  position bottom
  #strip_workspace_numbers yes
  status_command i3status
}

# ===
# Custom
# ===

# ---
# Key bindings
# ---

# Custom "F" commands
bindsym $mod+F1 exec firefox

# System volume
bindsym $mod+Next exec pactl set-sink-volume 0 -- -10%
bindsym $mod+Prior exec pactl set-sink-volume 0 -- +10%
bindsym $mod+End exec pactl set-sink-mute 0 -- toggle

# Hide info bar
bindsym $mod+m bar mode toggle

# start a terminal
bindsym $mod+Return exec i3-sensible-terminal

# lock screen
bindsym $mod+x exec i3lock

# Screen-shots (scrot)
bindsym --release Print exec --no-startup-id scrot
bindsym --release Shift+Print exec --no-startup-id scrot -s

# bindsym $mod+Left exec i3-msg move workspace to output left
# bindsym $mod+Right exec i3-msg move workspace to output right

# User "xprop" from a terminal to get information regarding a window
# WM_CLASS(STRING) = "instance", "class"
# WM_NAME(STRING} = "title"
# for_window [class="class" instance="instance" title="title"] floating window

# Gource (any title will be floating by default)
for_window [class="gource" instance="gource"] floating enable

# Thunar
# Progress window
for_window [class="Thunar" instance="thunar" title="File Operation Progress"] floating enable

# Arandr
for_window [class="Arandr" instance="arandr"] floating enable

# Teamviewer
# Computers & Contacts (resize to default Windows size)
for_window [class="TeamViewer" instance="TeamViewer" title="Computers & Contacts"] floating enable; resize shrink width 10000px; resize grow width 150px; resize shrink height 10000px; resize grow height 430px;

# Main window (resize to default Windows size)
for_window [title="TeamViewer"] floating enable; resize shrink width 10000px; resize grow width 606px; resize shrink height 10000px; resize grow height 430px;

# ---
# Initial Executions
# ---

# Background color
exec --no-startup-id xsetroot -solid "#14151f"

# Network management application (background)
exec --no-startup-id nm-applet

# Conky (background system monitor)
exec --no-startup-id conky

# CBattIcon (background system monitor)
exec --no-startup-id cbatticon

# Launch virtualbox onto workspace 0
exec --no-startup-id i3-msg "workspace $ws0; exec virtualbox"

# Launch remmina onto workspace 9
exec --no-startup-id i3-msg "workspace $ws9; exec remmina"

# Launch thunar onto workspace 5
exec --no-startup-id i3-msg "workspace $ws5; exec thunar"

# Launch thunar onto workspace 4
exec --no-startup-id i3-msg "workspace $ws4; exec libreoffice"

# Launch firefox onto workspace 3
exec --no-startup-id i3-msg "workspace $ws3; exec firefox"

# Launch terminator onto workspace 2
exec --no-startup-id i3-msg "workspace $ws2; exec terminator --execute vim"

# Launch terminator onto workspace 1
exec --no-startup-id i3-msg "workspace $ws1; exec terminator"

# Launch xautolock
#exec --no-startup-id i3-msg "workspace $ws1; exec $(if ! pgrep -u $USER xautolock > /dev/null; then; nohup xautolock -time 3 -locker autolock > /dev/null &; fi)"
